name: Frontend ‚Äî Build, Test & Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  REGISTRY_NS: tracybachmann
  TAG: latest

concurrency:
  group: prod-deploy-frontend
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm cache clean --force || true
          npm ci --no-audit --no-fund

      - name: Lint
        run: npm run lint || echo "‚ö†Ô∏è Pas de lint configur√©, on continue..."

      - name: Build Angular
        run: npm run build

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless || echo "‚ö†Ô∏è Pas de tests configur√©s, on continue..."

  build-push-frontend:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ env.REGISTRY_NS }}/backend-frontend
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-,format=long
            type=ref,event=branch

      - name: Build & Push frontend image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy frontend to VM
    needs: build-push-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy & Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          command_timeout: 10m
          envs: DOCKERHUB_USER,DOCKERHUB_TOKEN
          script: |
            set -e
            cd /opt/bibliomate

            echo "üîê Login Docker Hub..."
            docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_TOKEN"

            echo "üì• Pull nouvelle image frontend..."
            docker compose --env-file .env -f deploy/docker-compose.prod.yml pull frontend

            echo "üîÑ Red√©marrage frontend..."
            docker compose --env-file .env -f deploy/docker-compose.prod.yml up -d frontend

            echo "‚è≥ Attente d√©marrage (15s)..."
            sleep 15

            echo "üè• Health check..."
            HTTP_CODE=$(curl -sk -o /dev/null -w "%{http_code}" https://bibliomate.fr/ || echo "000")

            if [ "$HTTP_CODE" = "200" ]; then
              echo "‚úÖ D√©ploiement r√©ussi ! Frontend op√©rationnel."
              docker compose -f deploy/docker-compose.prod.yml ps | grep frontend
              exit 0
            else
              echo "‚ùå Health check √©chou√© : HTTP $HTTP_CODE"
              echo "üìã Logs frontend:"
              docker logs --tail 50 frontend
              exit 1
            fi
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deployment Success
        if: success()
        run: |
          echo "üéâ Frontend d√©ploy√© avec succ√®s !"
          echo "üîó https://bibliomate.fr"
          echo "üìä Commit: ${{ github.sha }}"

      - name: Deployment Failed
        if: failure()
        run: |
          echo "‚ùå Le d√©ploiement a √©chou√©"
          echo "üìã Consulte les logs ci-dessus pour plus de d√©tails"
