server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # ===== Proxy API (corrige aussi /api/api/...) =====
  location ~* ^/api/(.*)$ {
    # Enlève le premier /api/ pour éviter les doublons côté backend
    rewrite ^/api/(.*)$ /$1 break;

    proxy_pass         http://backend:5000;
    proxy_http_version 1.1;

    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;

    # (Facultatif mais sûr pour WS/HTTP/2)
    proxy_set_header   Upgrade $http_upgrade;
    proxy_set_header   Connection $connection_upgrade;

    proxy_read_timeout 60s;
    proxy_connect_timeout 5s;
  }

  # Cache long pour JS/CSS/maps
  location ~* \.(?:js|mjs|css|map)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Cache long pour polices
  location ~* \.(?:woff2?|ttf|otf)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Cache long pour images
  location ~* \.(?:avif|webp|png|jpg|jpeg|gif|svg)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # (ok de garder ta règle /assets/)
  location /assets/ {
    try_files $uri =404;
    add_header Cache-Control "public, max-age=31536000, immutable";
  }

  # HTML non mis en cache (important pour voir les nouveaux builds)
  location = /index.html { add_header Cache-Control "no-store, no-cache, must-revalidate"; }
  location = /            { add_header Cache-Control "no-store, no-cache, must-revalidate"; }

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Compression
  gzip on;
  gzip_min_length 1024;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;
}
